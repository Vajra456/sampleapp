server.port=8085
topic=my-topic


spring.kafka.bootstrap-servers=http://localhost:9092
spring.kafka.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.main.web-environment=false
spring.kafka.consumer.max-poll-interval=30000
spring.kafka.consumer.fetch-min-bytes=1000
spring.kafka.consumer.session-timeout=45000
spring.kafka.consumer.max-connection-idle-time=60000
spring.kafka.consumer.max-receive-buffer=-1
spring.kafka.consumer.max-poll-records=50
kafka.schema.registry.url=http://localhost:8081

# Health Related Endpoints
#management.endpoint.health.group.custom.show-components=always
#management.endpoint.health.group.custom.show-details=always
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.enable.sample=true
#management.port: 9001
logging.level.io.micrometer=DEBUG
logging.level.io.micrometer.core.instrument.binder=DEBUG
